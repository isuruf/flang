branches:
  only:
    - master
    - windows
    - windows-rebased

environment:
  global:
    CONDA_INSTALL_LOCN: C:\\Miniconda36-x64
    APPVEYOR_SAVE_CACHE_ON_FAILURE: true

os: Visual Studio 2017

platform:
  - x64

install:
  # Add path, activate `conda` and update conda.
  - cmd: call %CONDA_INSTALL_LOCN%\Scripts\activate.bat
  # Add our channels.
  - cmd: conda config --add channels defaults
  - cmd: conda config --add channels conda-forge
  - cmd: conda install --yes --quiet llvmdev clangdev flang-meta cmake
  - cmd: conda install --yes -c isuruf kitware-ninja

build_script:
  - ps: mkdir build

  - cd build
  - set "PATH=%cd%\bin;%PATH%"
  - call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvarsall.bat" x64
  - cmd: >-
      cmake -G "Ninja" ^
      -DCMAKE_INSTALL_PREFIX=%CONDA_PREFIX% ^
      -DFLANG_INCLUDE_TESTS=ON ^
      -DLLVM_INCLUDE_TESTS=ON ^
      -DFLANG_TEST_VERBOSE_MODE=ON ^
      -DCMAKE_C_COMPILER=clang-cl ^
      -DCMAKE_CXX_COMPILER=clang-cl ^
      -DCMAKE_Fortran_COMPILER=flang ^
      -DCMAKE_BUILD_TYPE=Release ^
      -DLLVM_MAIN_SRC_DIR=C:\llvm_src ^
      ..

  - ps: Push-AppveyorArtifact .\CMakeFiles\CMakeOutput.log
  - ps: Push-AppveyorArtifact .\CMakeFiles\CMakeError.log

  - cmake --build .

test_script:
  - cmd: cmake --build . --target install
